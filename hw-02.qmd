---
title: "HW 02"
author: "Brooke Pacheco"
format: 
  html:
    embed-resources: true
toc: true
---
```{r}
#| label: Set-up
# load packages
library(countdown)
library(scales)
library(tidyverse)
library(janitor)
library(colorspace)
library(broom)
library(fs)
library(ggridges)
library(ggplot2)
library(dplyr)

# set theme for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 11))

# set width of code output
options(width = 65)

# set figure parameters for knitr
knitr::opts_chunk$set(
  fig.width = 7, # 7" width
  fig.asp = 0.618, # the golden ratio
  fig.retina = 3, # dpi multiplier for displaying HTML output on retina
  fig.align = "center", # center align figures
  dpi = 300 # higher dpi, sharper image
)

# install pacman if needed
if (!require("pacman")) 
  install.packages("pacman")

# use this line for installing/loading
pacman::p_load(
  tidyverse, janitor, colorspace, broom, fs, 
  ggridges, ggplot2, dplyr, countdown, ggthemes, devtools
)

# install dsbox if needed
if (!require("dsbox")) devtools::install_github("databrew/dsbox")

# load dsbox package
library(dsbox)
```

## 1 - A new day, a new plot, a new geom

```{r}
#| label: Question 1

# load edibnb dataset into environment
data(edibnb)

# Read in data from edinbnb data and clean 
write_csv(edibnb, "edibnb_data.csv", na = "")

edibnb |>
  glimpse()

edibnb |>
  select(neighbourhood, review_scores_rating) |>
  filter(!is.na(review_scores_rating)) |>
  filter(!is.na(neighbourhood)) |>
  group_by(neighbourhood) |>
  mutate(median_score = median(review_scores_rating)) |>
  ungroup() |>
  filter(!is.na(median_score)) |>
  mutate(neighbourhood = fct_reorder(neighbourhood, median_score)) 

data <- data.frame(x = 1:5, y = rep(1, 5), height = c(0, 1, 3, 4, 2))
ggplot(edibnb, aes(x = review_scores_rating, y = neighbourhood)) +
  geom_density_ridges(scale = 4, rel_min_height = 0.01) +
  coord_cartesian(clip = "off") + 
  scale_x_continuous(limits = c(80, 103), expand = c(0, 0)) +
  labs(
    title = "Airbnb Review Scores of Edinburgh Neighborhoods",
    x = "Review Score",
    y = "Neighborhood"
  ) +
  theme_ridges()

```
### Sources
Tools on using the write function directly used from:
https://readr.tidyverse.org/reference/write_delim.html


## 2 - Foreign Connected PACs

```{r}
#| label: Question 2

# get a list of files with "Foreign Connected PAC" in their names
list_of_files <- dir_ls(path = "data", regexp = "Foreign Connected PAC")

# read all files and row bind them
# keeping track of the file name in a new column called year
pac <- read_csv(list_of_files, id = "year") |>
  janitor::clean_names() |>
  mutate(year = stringr::str_extract(year, "\\d{4}"),
         year = as.integer(year)) |>
  separate(country_of_origin_parent_company, 
           into = c("country_of_origin", "parent_company"), 
           sep = "/", 
           fill = "right") |>
  mutate(
    dems = readr::parse_number(dems),
    repubs = readr::parse_number(repubs)
  ) |>
  select(year, pac_name_affiliate, country_of_origin, parent_company, dems, repubs) |>
  pivot_longer(
    cols = c(dems, repubs),
    names_to = "party",
    values_to = "amount"
  ) |>
  mutate(
    party = case_when(
      party == "dems" ~ "Democrat",
      party == "repubs" ~ "Republican",
      TRUE ~ party
    )) |>
  glimpse()

pac

uk <- pac |>
  filter(country_of_origin %in% c("United Kingdom", "UK")) |>
  group_by(year, party) |>
  summarize(total_amount = sum(amount, na.rm = TRUE), .groups = "drop") |>
  mutate(total_amount = total_amount / 1000000) |>
  arrange(year, party)

uk

ggplot(uk, aes(x = year, y = total_amount, color = party, group = party)) + 
  geom_line(linewidth = 0.8) +
  scale_color_manual(
    values = c("Democrat" = "blue", "Republican" = "red")
  ) +
  scale_x_continuous(breaks = seq(2000, 2022, 5)) +
  labs (
    title = "Contributions to US political parties from UK-connected PACs",
    x = "Year",
    y = "Total amount",
    color = "Party",       
    caption = "Source: OpenSecrets.org" 
  ) +
  scale_y_continuous(labels = label_dollar(suffix = "M")) +
  theme_minimal(base_size = 11) + 
  theme(
    axis.title.x = element_text(hjust = 0),  
    axis.title.y = element_text(hjust = 0)
  )

```
### Sources
Usage of string extract inspired by:
https://stringr.tidyverse.org/reference/str_extract.html#ref-examples

Separating character string and using fill arguement inspired by: https://tidyr.tidyverse.org/reference/separate.html 

Taken parse number from to remove '$' from column data:
https://readr.tidyverse.org/reference/parse_number.html

Referenced cheat sheet page for readr:
https://readr.tidyverse.org/

Referenced this page for pivot_longer parameters:
https://tidyr.tidyverse.org/reference/pivot_longer.html


## 3 - Median housing prices in the US


## 4 - Expect More. Plot More.


## 5 - Mirror, mirror on the wall, whoâ€™s the ugliest of them all?
